# -*- coding: utf-8 -*-
"""Count_word_frequencies.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Eukoh_5diBIgABcjgVASLNzBeZ2clMUJ
"""

# Import libraries
import re
import string
import pandas as pd

string = "As I was waiting, a man came out of a5 7 a side room, and at a glance I was sure he must be Long John. His left leg was cut off close by the hip, and under the left shoulder he carried a crutch, which he managed with wonderful dexterity, hopping about upon it like a bird. He was very tall and strong, with a face as big as a hamâ€”plain and pale, but intelligent and smiling. Indeed, he seemed in the most cheerful spirits, whistling as he moved about among the tables, with a merry word or a slap on the shoulder for the more favoured of his guests."
string

def count_words(text):
    """Count how many times each unique word occurs in text."""
    counts = dict()  # dictionary of { <word>: <count> } pairs to return
    
    # Convert to lowercase
    text = text.lower()
    
    # Split text into tokens (words), leaving out punctuation
    pattern = r'[^A-Za-z0-9]'
    text = re.split(pattern, text)
    text = [i for i in text if i != '']
    # Aggregate word counts using a dictionary
    for element in text:
      counts[element] = text.count(element)
    return counts

# Get word frequencies of the string
print(count_words(string))

frequencies = count_words(string)
frequencies.items()

def test_run():
    counts = count_words(string)
    sorted_counts = sorted(counts.items(), key=lambda pair: pair[1], reverse=True)
        
    print("10 most common words:\nWord\tCount")
    for word, count in sorted_counts[:10]:
        print("{}\t{}".format(word, count))
        
    print("\n10 least common words:\nWord\tCount")
    for word, count in sorted_counts[-10:]:
        print("{}\t{}".format(word, count))


if __name__ == "__main__":
    test_run()